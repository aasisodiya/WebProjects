/* Variables */

:root {}

* {
    margin: 0;
}

body {
    font-family: 'Righteous', sans-serif;
}

.container {
    background-color: rgb(140, 140, 140);
    display: grid;
    /* grid-auto-flow: column; The grid-auto-flow CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid. grid-auto-flow when set to column will automatically  */
    grid-template-columns: auto auto;
    min-height: 100vh;
    /* align-self: center; */
    /*didnt work*/
    /* align-content: center; */
    /* worked but height changed for children */
    /* align-items: center; */
    /* worked but height changed for children */
}

.leftContainer, .rightContainer {
    position: relative;
    display: flex;
    /* align-self: center; */
    /* worked but height changed for children */
    /* align-content: center; */
    /* didn't worked */
    align-items: center;
    /* worked without changing height */
}

.leftContainer {
    background-color: beige;
}

.rightContainer {
    background-color: rgb(39, 39, 39);
}

.centerContent {
    color: dimgray;
    width: 100%;
    text-align: center;
}

.divider {
    width: 50%;
    margin: 10px auto;
    /* To center align hr */
    border-top: 1px solid rgba(255, 68, 0, 0.5);
}

.mood-container {
    display: grid;
    grid-template-columns: auto auto auto;
    width: 50%;
    margin: auto;
    gap: 0.5rem;
}

/* Tool Tip */

.emoji {
    position: relative;
    display: inline-block;
    cursor: pointer;
    padding: 1rem;
    border-radius: 100%;
}

.emoji:hover {
    animation: breath 2s ease-out infinite;
}

.emoji .emojidescription {
    visibility: hidden;
    width: 120px;
    background-color: rgba(34, 34, 34, 0.7);
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 5px 0;
    /* Position the emoji */
    position: absolute;
    z-index: 1;
    bottom: 100%;
    left: 50%;
    margin-left: -60px;
}

.emoji:hover .emojidescription {
    visibility: visible;
    font-size: 0.7rem;
}

.emoji-span {
    font-size: 2.5rem;
    top: -0.1rem;
    /* Required: To fix the position of emoji in div */
    position: relative;
}

.arrow-down {
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid rgba(34, 34, 34, 0.7);
    position: absolute;
    bottom: -10px;
    left: calc(50% - 10px);
}

/* Code for right side container */

.month-calendar {
    /* The CSS Grid Layout Module offers a grid-based layout system,
    with rows and columns, making it easier to design web pages
    without having to use floats and positioning. */
    display: grid;
    /* The grid-template-columns property specifies the number (and the widths) of columns in a grid layout.
    The values are a space separated list, where each value specifies the size of the respective column. */
    /* grid-template-columns: 100px 100px 100px 100px 100px 100px 100px; */
    /* grid-template-columns: auto auto auto auto auto auto auto auto auto auto auto auto; */
    grid-template-columns: auto auto auto auto auto auto auto;
    /* using (auto auto auto auto) will create 4 columns.
    Where the size of the columns is determined by
    the size of the container and on the size of
    the content of the items in the column */
    grid-gap: 5px;
    /* This is the gap between every grid element */
    padding: 2px;
    width: fit-content;
    /* Width as fit-content will retrict current element width to the overall width of the content */
    margin: auto;
    /* to center align the parent grid*/
}

.month-calendar>div {
    /* text-align: center; */
    /* padding: 10px 0; */
    font-size: 2.5rem;
    /* width: 30px;
    height: 30px; */
    /* width: fit-content; */
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
}

.month-calendar>div>span {
    position: absolute;
    top: -0.2rem;
    display: none;
}

.deadcell {
    background-color: darkslategray;
    cursor: default;
}

.weekdayInitials {
    background-color: orange;
    color: #2b2b2b;
    cursor: default;
}

.day {
    background-color: wheat;
    cursor: pointer;
}

.day:hover>span {
    display: block;
}

#selectedMonth, #selectedYear {
    position: absolute;
    top: 5px;
}

#selectedMonth {
    color: rgb(39, 39, 39);
    right: 5px;
}

#selectedYear {
    color: beige;
    left: 5px;
}

/* Animations */

@keyframes breath {
    0% {
        box-shadow: 0 0 5px 2px rgba(34, 34, 34, 0.7);
    }
    50% {
        box-shadow: 0 0 10px 2px rgba(34, 34, 34, 0.7);
    }
    100% {
        box-shadow: 0 0 5px 2px rgba(34, 34, 34, 0.7);
    }
}